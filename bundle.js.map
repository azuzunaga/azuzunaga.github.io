{"version":3,"sources":["webpack:///webpack/bootstrap eb04f89b0cba8b11868c","webpack:///./frontend/entry.js","webpack:///./frontend/game.js","webpack:///./frontend/token.js","webpack:///./frontend/game_view.js","webpack:///./frontend/gun.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;AC7DA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;ACrBD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB,QAAQ;AAC7B;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,qBAAqB,+BAA+B;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;;;;;;;;;ACzCA;;AAEA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap eb04f89b0cba8b11868c","import Game from './game';\nimport GameView from './game_view';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"canvas\");\n  canvas.width = Game.DIM_X;\n  canvas.height = Game.DIM_Y;\n\n  const ctx = canvas.getContext(\"2d\");\n  const game = new Game();\n  const gameView = new GameView(game, canvas, ctx);\n  gameView.start();\n\n  document.addEventListener(\"click\", () => {\n    gameView.shootToken();\n  });\n\n  document.addEventListener(\"mousemove\",\n    gameView.mouseMoveHandler.bind(gameView)\n  );\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/entry.js\n// module id = 0\n// module chunks = 0","import Token from './token';\nimport Gun from './gun';\n\nclass Game {\n  constructor() {\n    this.loadedToken = {};\n    this.token = {};\n    this.gun = [];\n    this.stoppedTokens = [];\n    this.nonImpactedTokens = [];\n    this.loadToken();\n    this.loadRows();\n  }\n\n  loadRows() {\n    for (let r = 0; r < 5; r++) {\n      for (let c = 0; c < 15; c++) {\n        let posX = c * 40 + 20 * (r % 2) + 20;\n        let posY = 40 * r + 20;\n\n        let token = new Token({\n          pos: [posX, posY],\n        });\n        this.stoppedTokens.push(token);\n      }\n    }\n  }\n\n  loadToken() {\n    this.loadedToken = new Token ({\n      pos: [Game.DIM_X / 2, Game.DIM_Y - 20],\n      impacted: false,\n    });\n  }\n\n  addGun() {\n    const gun = new Gun({\n      game: this,\n      width: Game.DIM_X,\n      height: Game.DIM_Y,\n    });\n\n    this.gun = gun;\n\n    return gun;\n  }\n\n  draw(ctx) {\n\n    ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n\n    if (this.token instanceof Token) {\n      for (let i = 0; i < this.stoppedTokens.length; i++) {\n        let stopToken = this.stoppedTokens[i];\n\n        if (this.token.collideWith(stopToken)) {\n          // check if tokens are the same color, remove if yes\n          if (this.token.color === stopToken.color) {\n            this.token.impacted = true;\n            stopToken.impacted = true;\n            break;\n          } else {\n            // add token to stoppedTokens array and stack in grid\n            this.token.pos[1] = stopToken.pos[1] + 40;\n            this.token.pos[0] = Math.ceil(this.token.pos[0] / 40) * 40 - 20;\n            this.token.vel = [0, 0];\n\n            // hexagonal stacking\n            if ((this.token.pos[1] / 20) % 4 === 3) {\n              this.token.pos[0] = this.token.pos[0] + 20;\n            }\n            this.stoppedTokens.push(this.token);\n            break;\n          }\n        }\n      }\n\n      this.stoppedTokens.forEach(stopToken =>{\n        if (!stopToken.impacted) {\n          this.nonImpactedTokens.push(stopToken);\n        }\n      });\n\n      if (this.token.pos[1] === this.token.radius) {\n        this.token.pos[0] = Math.ceil(this.token.pos[0] / 40) * 40 - 20;\n      }\n\n      this.token.draw(ctx);\n      window.token = this.token;\n      window.loadedToken = this.loadedToken;\n\n      this.stoppedTokens = this.nonImpactedTokens;\n      this.nonImpactedTokens = [];\n    }\n\n    window.stoppedTokens = this.stoppedTokens;\n    window.nonImpactedTokens = this.nonImpactedTokens;\n\n\n    this.stoppedTokens.forEach(stopToken => {\n      stopToken.draw(ctx);\n    });\n    this.loadedToken.draw(ctx);\n    this.gun.draw(ctx);\n  }\n\n  moveToken() {\n    if (this.token instanceof Token){\n      this.token.move();\n    }\n  }\n}\n\nGame.BG_COLOR = \"lightgray\";\nGame.DIM_X = 620;\nGame.DIM_Y = 600;\nGame.ROW_SIZE = 15;\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/game.js\n// module id = 3\n// module chunks = 0","const COLORS  = [\n  \"#60D394\",\n  \"#847996\",\n  \"#F18805\",\n  \"#EE6055\"\n];\n\nclass Token {\n  constructor(options = {}) {\n    this.canvasWidth = 620;\n    this.canvasHeight = 600;\n    this.radius = 20;\n    this.pos = options.pos ||\n      [this.canvasWidth / 2, this.canvasHeight];\n    this.vel = options.vel || [0, 0];\n    this.color = COLORS[this.getRandomInt(4)];\n    this.impacted = options.impacted || false;\n  }\n\n  getRandomInt(n) {\n    return Math.floor(Math.random() * Math.floor(n));\n  }\n\n  move() {\n    const leftEdge = this.canvasWidth - this.radius;\n\n    if (this.pos[1] < this.radius + 1) {\n      this.pos = [this.pos[0], this.radius];\n    } else if (this.pos[0] < this.radius || this.pos[0] > leftEdge) {\n      this.vel[0] = -1 * this.vel[0];\n      this.pos = [this.pos[0] + this.vel[0], this.pos[1] + this.vel[1]];\n    } else {\n      this.pos = [this.pos[0] + this.vel[0], this.pos[1] + this.vel[1]];\n    }\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n\n    ctx.beginPath();\n    ctx.arc(this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true);\n    ctx.fill();\n  }\n\n  collideWith(token) {\n    let xDist = token.pos[0] - this.pos[0];\n    let yDist = token.pos[1] - this.pos[1];\n    let originDist = Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n    return originDist < 35;\n  }\n}\n\nexport default Token;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/token.js\n// module id = 4\n// module chunks = 0","class GameView {\n  constructor(game, canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.game = game;\n    this.gun = this.game.addGun({});\n  }\n\n  start() {\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  animate() {\n    this.game.draw(this.ctx);\n    this.game.moveToken();\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  shootToken() {\n    this.gun.shootToken();\n  }\n\n  mouseMoveHandler(e) {\n    let leftOffset = this.offset(this.canvas).left;\n    let topOffset = this.offset(this.canvas).top;\n\n    let canWidth = this.canvas.width;\n    let canHeight = this.canvas.height;\n\n    let relativeX = e.clientX - canWidth / 2 - leftOffset;\n    let relativeY = canHeight + 20 - (e.clientY - topOffset);\n\n    this.gun.calculateCoords(relativeX, relativeY);\n  }\n\n  offset(el) {\n    let rect = el.getBoundingClientRect();\n    return { top: rect.top, left: rect.left };\n  }\n}\n\nexport default GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/game_view.js\n// module id = 5\n// module chunks = 0","import Token from './token';\n\nclass Gun {\n  constructor(options = {}) {\n    this.game = options.game;\n\n    this.canvas = document.getElementById(\"canvas\");\n    this.canvasWidth = options.width;\n    this.canvasHeight = options.height;\n\n    this.gunLength = 50;\n    this.gunX = options.gunX || 0;\n    this.gunY = options.gunY || this.gunLength;\n\n    this.relativeX = 0;\n    this.relativeY = 20;\n  }\n\n  shootToken() {\n    const tokenX = this.gunX / (this.gunLength / 10);\n    const tokenY = -this.gunY / (this.gunLength / 10);\n\n    let token = this.game.loadedToken;\n    token.vel = [tokenX, tokenY];\n\n    this.game.token = token;\n\n    this.game.loadToken();\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.moveTo(this.canvasWidth / 2, this.canvasHeight - this.relativeY);\n    ctx.lineTo(this.canvasWidth / 2 + this.gunX, this.canvasHeight - this.gunY);\n    ctx.stroke();\n  }\n\n  calculateCoords(relativeX, relativeY) {\n    // Get x and y distances based on mouse coordinates and gun length\n    let k = Math.pow(\n      Math.pow(\n        this.gunLength, 2\n      ) / (Math.pow(\n        relativeX, 2\n      ) + Math.pow(\n        relativeY, 2\n      )), 0.5\n    );\n\n    this.gunX = relativeX * k;\n    this.gunY = relativeY * k;\n  }\n}\n\nexport default Gun;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/gun.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}